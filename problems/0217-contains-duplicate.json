{
  "title": "Contains Duplicate",
  "problem_id": "217",
  "frontend_id": "217",
  "difficulty": "Easy",
  "problem_slug": "contains-duplicate",
  "topics": [
    "Array",
    "Hash Table",
    "Sorting"
  ],
  "description": "Given an integer array nums, return true if any value appears at least twice in the array, and return false if every element is distinct.\nExample 1:\nExample 2:\nExample 3:\nConstraints:",
  "examples": [
    {
      "example_num": 1,
      "example_text": "Input: nums = [1,2,3,1]\nOutput: true\nExplanation:\nThe element 1 occurs at the indices 0 and 3.",
      "images": []
    },
    {
      "example_num": 2,
      "example_text": "Input: nums = [1,2,3,4]\nOutput: false\nExplanation:\nAll elements are distinct.",
      "images": []
    },
    {
      "example_num": 3,
      "example_text": "Input: nums = [1,1,1,3,3,4,3,2,4,2]\nOutput: true",
      "images": []
    }
  ],
  "constraints": [
    "1 <= nums.length <= 105",
    "-109 <= nums[i] <= 109"
  ],
  "follow_ups": [],
  "hints": [],
  "code_snippets": {
    "cpp": "class Solution {\npublic:\n    bool containsDuplicate(vector<int>& nums) {\n        \n    }\n};",
    "java": "class Solution {\n    public boolean containsDuplicate(int[] nums) {\n        \n    }\n}",
    "python": "class Solution(object):\n    def containsDuplicate(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: bool\n        \"\"\"\n        ",
    "python3": "class Solution:\n    def containsDuplicate(self, nums: List[int]) -> bool:\n        ",
    "c": "bool containsDuplicate(int* nums, int numsSize) {\n    \n}",
    "csharp": "public class Solution {\n    public bool ContainsDuplicate(int[] nums) {\n        \n    }\n}",
    "javascript": "/**\n * @param {number[]} nums\n * @return {boolean}\n */\nvar containsDuplicate = function(nums) {\n    \n};",
    "typescript": "function containsDuplicate(nums: number[]): boolean {\n    \n};",
    "php": "class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @return Boolean\n     */\n    function containsDuplicate($nums) {\n        \n    }\n}",
    "swift": "class Solution {\n    func containsDuplicate(_ nums: [Int]) -> Bool {\n        \n    }\n}",
    "kotlin": "class Solution {\n    fun containsDuplicate(nums: IntArray): Boolean {\n        \n    }\n}",
    "dart": "class Solution {\n  bool containsDuplicate(List<int> nums) {\n    \n  }\n}",
    "golang": "func containsDuplicate(nums []int) bool {\n    \n}",
    "ruby": "# @param {Integer[]} nums\n# @return {Boolean}\ndef contains_duplicate(nums)\n    \nend",
    "scala": "object Solution {\n    def containsDuplicate(nums: Array[Int]): Boolean = {\n        \n    }\n}",
    "rust": "impl Solution {\n    pub fn contains_duplicate(nums: Vec<i32>) -> bool {\n        \n    }\n}",
    "racket": "(define/contract (contains-duplicate nums)\n  (-> (listof exact-integer?) boolean?)\n  )",
    "erlang": "-spec contains_duplicate(Nums :: [integer()]) -> boolean().\ncontains_duplicate(Nums) ->\n  .",
    "elixir": "defmodule Solution do\n  @spec contains_duplicate(nums :: [integer]) :: boolean\n  def contains_duplicate(nums) do\n    \n  end\nend"
  }
}