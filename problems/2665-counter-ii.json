{
  "title": "Counter II",
  "problem_id": "2789",
  "frontend_id": "2665",
  "difficulty": "Easy",
  "problem_slug": "counter-ii",
  "topics": [],
  "description": "Write a function createCounter. It should accept an initial integer init. It should return an object with three functions.\nThe three functions are:\nExample 1:\nExample 2:\nConstraints:",
  "examples": [
    {
      "example_num": 1,
      "example_text": "Input: init = 5, calls = [\"increment\",\"reset\",\"decrement\"]\nOutput: [6,5,4]\nExplanation:\nconst counter = createCounter(5);\ncounter.increment(); // 6\ncounter.reset(); // 5\ncounter.decrement(); // 4",
      "images": []
    },
    {
      "example_num": 2,
      "example_text": "Input: init = 0, calls = [\"increment\",\"increment\",\"decrement\",\"reset\",\"reset\"]\nOutput: [1,2,1,0,0]\nExplanation:\nconst counter = createCounter(0);\ncounter.increment(); // 1\ncounter.increment(); // 2\ncounter.decrement(); // 1\ncounter.reset(); // 0\ncounter.reset(); // 0",
      "images": []
    }
  ],
  "constraints": [
    "-1000 <= init <= 1000",
    "0 <= calls.length <= 1000",
    "calls[i] is one of \"increment\", \"decrement\" and \"reset\""
  ],
  "follow_ups": [],
  "hints": [
    "You can return an object with methods.",
    "Initialize a variable for currentCount. Inside these methods, add the appropriate logic which mutates currentCount."
  ],
  "code_snippets": {
    "javascript": "/**\n * @param {integer} init\n * @return { increment: Function, decrement: Function, reset: Function }\n */\nvar createCounter = function(init) {\n    \n};\n\n/**\n * const counter = createCounter(5)\n * counter.increment(); // 6\n * counter.reset(); // 5\n * counter.decrement(); // 4\n */",
    "typescript": "type Counter = {\n    increment: () => number,\n    decrement: () => number,\n    reset: () => number,\n}\n\nfunction createCounter(init: number): Counter {\n    \n};\n\n/**\n * const counter = createCounter(5)\n * counter.increment(); // 6\n * counter.reset(); // 5\n * counter.decrement(); // 4\n */"
  }
}