{
  "title": "Count Paths With the Given XOR Value",
  "problem_id": "3659",
  "frontend_id": "3393",
  "difficulty": "Medium",
  "problem_slug": "count-paths-with-the-given-xor-value",
  "topics": [
    "Array",
    "Dynamic Programming",
    "Bit Manipulation",
    "Matrix"
  ],
  "description": "You are given a 2D integer array grid with size m x n. You are also given an integer k.\nYour task is to calculate the number of paths you can take from the top-left cell (0, 0) to the bottom-right cell (m - 1, n - 1) satisfying the following constraints:\nReturn the total number of such paths.\nSince the answer can be very large, return the result modulo 109 + 7.\nExample 1:\nExample 2:\nExample 3:\nConstraints:",
  "examples": [
    {
      "example_num": 1,
      "example_text": "Input: grid = [[2, 1, 5], [7, 10, 0], [12, 6, 4]], k = 11\nOutput: 3\nExplanation:\nThe 3 paths are:",
      "images": []
    },
    {
      "example_num": 2,
      "example_text": "Input: grid = [[1, 3, 3, 3], [0, 3, 3, 2], [3, 0, 1, 1]], k = 2\nOutput: 5\nExplanation:\nThe 5 paths are:",
      "images": []
    },
    {
      "example_num": 3,
      "example_text": "Input: grid = [[1, 1, 1, 2], [3, 0, 3, 2], [3, 0, 2, 2]], k = 10\nOutput: 0",
      "images": []
    }
  ],
  "constraints": [
    "1 <= m == grid.length <= 300",
    "1 <= n == grid[r].length <= 300",
    "0 <= grid[r][c] < 16",
    "0 <= k < 16"
  ],
  "follow_ups": [],
  "hints": [
    "Use DP."
  ],
  "code_snippets": {
    "cpp": "class Solution {\npublic:\n    int countPathsWithXorValue(vector<vector<int>>& grid, int k) {\n        \n    }\n};",
    "java": "class Solution {\n    public int countPathsWithXorValue(int[][] grid, int k) {\n        \n    }\n}",
    "python": "class Solution(object):\n    def countPathsWithXorValue(self, grid, k):\n        \"\"\"\n        :type grid: List[List[int]]\n        :type k: int\n        :rtype: int\n        \"\"\"\n        ",
    "python3": "class Solution:\n    def countPathsWithXorValue(self, grid: List[List[int]], k: int) -> int:\n        ",
    "c": "int countPathsWithXorValue(int** grid, int gridSize, int* gridColSize, int k) {\n    \n}",
    "csharp": "public class Solution {\n    public int CountPathsWithXorValue(int[][] grid, int k) {\n        \n    }\n}",
    "javascript": "/**\n * @param {number[][]} grid\n * @param {number} k\n * @return {number}\n */\nvar countPathsWithXorValue = function(grid, k) {\n    \n};",
    "typescript": "function countPathsWithXorValue(grid: number[][], k: number): number {\n    \n};",
    "php": "class Solution {\n\n    /**\n     * @param Integer[][] $grid\n     * @param Integer $k\n     * @return Integer\n     */\n    function countPathsWithXorValue($grid, $k) {\n        \n    }\n}",
    "swift": "class Solution {\n    func countPathsWithXorValue(_ grid: [[Int]], _ k: Int) -> Int {\n        \n    }\n}",
    "kotlin": "class Solution {\n    fun countPathsWithXorValue(grid: Array<IntArray>, k: Int): Int {\n        \n    }\n}",
    "dart": "class Solution {\n  int countPathsWithXorValue(List<List<int>> grid, int k) {\n    \n  }\n}",
    "golang": "func countPathsWithXorValue(grid [][]int, k int) int {\n    \n}",
    "ruby": "# @param {Integer[][]} grid\n# @param {Integer} k\n# @return {Integer}\ndef count_paths_with_xor_value(grid, k)\n    \nend",
    "scala": "object Solution {\n    def countPathsWithXorValue(grid: Array[Array[Int]], k: Int): Int = {\n        \n    }\n}",
    "rust": "impl Solution {\n    pub fn count_paths_with_xor_value(grid: Vec<Vec<i32>>, k: i32) -> i32 {\n        \n    }\n}",
    "racket": "(define/contract (count-paths-with-xor-value grid k)\n  (-> (listof (listof exact-integer?)) exact-integer? exact-integer?)\n  )",
    "erlang": "-spec count_paths_with_xor_value(Grid :: [[integer()]], K :: integer()) -> integer().\ncount_paths_with_xor_value(Grid, K) ->\n  .",
    "elixir": "defmodule Solution do\n  @spec count_paths_with_xor_value(grid :: [[integer]], k :: integer) :: integer\n  def count_paths_with_xor_value(grid, k) do\n    \n  end\nend"
  }
}