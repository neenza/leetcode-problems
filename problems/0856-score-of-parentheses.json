{
  "title": "Score of Parentheses",
  "problem_id": "886",
  "frontend_id": "856",
  "difficulty": "Medium",
  "problem_slug": "score-of-parentheses",
  "topics": [
    "String",
    "Stack"
  ],
  "description": "Given a balanced parentheses string s, return the score of the string.\nThe score of a balanced parentheses string is based on the following rule:\nExample 1:\nExample 2:\nExample 3:\nConstraints:",
  "examples": [
    {
      "example_num": 1,
      "example_text": "Input: s = \"()\"\nOutput: 1",
      "images": []
    },
    {
      "example_num": 2,
      "example_text": "Input: s = \"(())\"\nOutput: 2",
      "images": []
    },
    {
      "example_num": 3,
      "example_text": "Input: s = \"()()\"\nOutput: 2",
      "images": []
    }
  ],
  "constraints": [
    "2 <= s.length <= 50",
    "s consists of only '(' and ')'.",
    "s is a balanced parentheses string."
  ],
  "follow_ups": [],
  "hints": [],
  "code_snippets": {
    "cpp": "class Solution {\npublic:\n    int scoreOfParentheses(string s) {\n        \n    }\n};",
    "java": "class Solution {\n    public int scoreOfParentheses(String s) {\n        \n    }\n}",
    "python": "class Solution(object):\n    def scoreOfParentheses(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: int\n        \"\"\"\n        ",
    "python3": "class Solution:\n    def scoreOfParentheses(self, s: str) -> int:\n        ",
    "c": "int scoreOfParentheses(char* s) {\n    \n}",
    "csharp": "public class Solution {\n    public int ScoreOfParentheses(string s) {\n        \n    }\n}",
    "javascript": "/**\n * @param {string} s\n * @return {number}\n */\nvar scoreOfParentheses = function(s) {\n    \n};",
    "typescript": "function scoreOfParentheses(s: string): number {\n    \n};",
    "php": "class Solution {\n\n    /**\n     * @param String $s\n     * @return Integer\n     */\n    function scoreOfParentheses($s) {\n        \n    }\n}",
    "swift": "class Solution {\n    func scoreOfParentheses(_ s: String) -> Int {\n        \n    }\n}",
    "kotlin": "class Solution {\n    fun scoreOfParentheses(s: String): Int {\n        \n    }\n}",
    "dart": "class Solution {\n  int scoreOfParentheses(String s) {\n    \n  }\n}",
    "golang": "func scoreOfParentheses(s string) int {\n    \n}",
    "ruby": "# @param {String} s\n# @return {Integer}\ndef score_of_parentheses(s)\n    \nend",
    "scala": "object Solution {\n    def scoreOfParentheses(s: String): Int = {\n        \n    }\n}",
    "rust": "impl Solution {\n    pub fn score_of_parentheses(s: String) -> i32 {\n        \n    }\n}",
    "racket": "(define/contract (score-of-parentheses s)\n  (-> string? exact-integer?)\n  )",
    "erlang": "-spec score_of_parentheses(S :: unicode:unicode_binary()) -> integer().\nscore_of_parentheses(S) ->\n  .",
    "elixir": "defmodule Solution do\n  @spec score_of_parentheses(s :: String.t) :: integer\n  def score_of_parentheses(s) do\n    \n  end\nend"
  }
}