{
  "title": "Reformat Date",
  "problem_id": "1283",
  "frontend_id": "1507",
  "difficulty": "Easy",
  "problem_slug": "reformat-date",
  "topics": [
    "String"
  ],
  "description": "Given a date string in the formÂ Day Month Year, where:\nConvert the date string to the format YYYY-MM-DD, where:\nExample 1:\nExample 2:\nExample 3:\nConstraints:",
  "examples": [
    {
      "example_num": 1,
      "example_text": "Input: date = \"20th Oct 2052\"\nOutput: \"2052-10-20\"",
      "images": []
    },
    {
      "example_num": 2,
      "example_text": "Input: date = \"6th Jun 1933\"\nOutput: \"1933-06-06\"",
      "images": []
    },
    {
      "example_num": 3,
      "example_text": "Input: date = \"26th May 1960\"\nOutput: \"1960-05-26\"",
      "images": []
    }
  ],
  "constraints": [
    "The given dates are guaranteed to be valid, so no error handling is necessary."
  ],
  "follow_ups": [],
  "hints": [
    "Handle the conversions of day, month and year separately.",
    "Notice that days always have a two-word ending, so if you erase the last two characters of this days you'll get the number."
  ],
  "code_snippets": {
    "cpp": "class Solution {\npublic:\n    string reformatDate(string date) {\n        \n    }\n};",
    "java": "class Solution {\n    public String reformatDate(String date) {\n        \n    }\n}",
    "python": "class Solution(object):\n    def reformatDate(self, date):\n        \"\"\"\n        :type date: str\n        :rtype: str\n        \"\"\"\n        ",
    "python3": "class Solution:\n    def reformatDate(self, date: str) -> str:\n        ",
    "c": "char* reformatDate(char* date) {\n    \n}",
    "csharp": "public class Solution {\n    public string ReformatDate(string date) {\n        \n    }\n}",
    "javascript": "/**\n * @param {string} date\n * @return {string}\n */\nvar reformatDate = function(date) {\n    \n};",
    "typescript": "function reformatDate(date: string): string {\n    \n};",
    "php": "class Solution {\n\n    /**\n     * @param String $date\n     * @return String\n     */\n    function reformatDate($date) {\n        \n    }\n}",
    "swift": "class Solution {\n    func reformatDate(_ date: String) -> String {\n        \n    }\n}",
    "kotlin": "class Solution {\n    fun reformatDate(date: String): String {\n        \n    }\n}",
    "dart": "class Solution {\n  String reformatDate(String date) {\n    \n  }\n}",
    "golang": "func reformatDate(date string) string {\n    \n}",
    "ruby": "# @param {String} date\n# @return {String}\ndef reformat_date(date)\n    \nend",
    "scala": "object Solution {\n    def reformatDate(date: String): String = {\n        \n    }\n}",
    "rust": "impl Solution {\n    pub fn reformat_date(date: String) -> String {\n        \n    }\n}",
    "racket": "(define/contract (reformat-date date)\n  (-> string? string?)\n  )",
    "erlang": "-spec reformat_date(Date :: unicode:unicode_binary()) -> unicode:unicode_binary().\nreformat_date(Date) ->\n  .",
    "elixir": "defmodule Solution do\n  @spec reformat_date(date :: String.t) :: String.t\n  def reformat_date(date) do\n    \n  end\nend"
  }
}