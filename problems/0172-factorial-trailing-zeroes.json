{
  "title": "Factorial Trailing Zeroes",
  "problem_id": "172",
  "frontend_id": "172",
  "difficulty": "Medium",
  "problem_slug": "factorial-trailing-zeroes",
  "topics": [
    "Math"
  ],
  "description": "Given an integer n, return the number of trailing zeroes in n!.\nNote that n! = n * (n - 1) * (n - 2) * ... * 3 * 2 * 1.\nExample 1:\nExample 2:\nExample 3:\nConstraints:\nFollow up: Could you write a solution that works in logarithmic time complexity?",
  "examples": [
    {
      "example_num": 1,
      "example_text": "Input: n = 3\nOutput: 0\nExplanation: 3! = 6, no trailing zero.",
      "images": []
    },
    {
      "example_num": 2,
      "example_text": "Input: n = 5\nOutput: 1\nExplanation: 5! = 120, one trailing zero.",
      "images": []
    },
    {
      "example_num": 3,
      "example_text": "Input: n = 0\nOutput: 0",
      "images": []
    }
  ],
  "constraints": [
    "0 <= n <= 104"
  ],
  "follow_ups": [
    "Could you write a solution that works in logarithmic time complexity?"
  ],
  "hints": [],
  "code_snippets": {
    "cpp": "class Solution {\npublic:\n    int trailingZeroes(int n) {\n        \n    }\n};",
    "java": "class Solution {\n    public int trailingZeroes(int n) {\n        \n    }\n}",
    "python": "class Solution(object):\n    def trailingZeroes(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: int\n        \"\"\"\n        ",
    "python3": "class Solution:\n    def trailingZeroes(self, n: int) -> int:\n        ",
    "c": "int trailingZeroes(int n) {\n    \n}",
    "csharp": "public class Solution {\n    public int TrailingZeroes(int n) {\n        \n    }\n}",
    "javascript": "/**\n * @param {number} n\n * @return {number}\n */\nvar trailingZeroes = function(n) {\n    \n};",
    "typescript": "function trailingZeroes(n: number): number {\n    \n};",
    "php": "class Solution {\n\n    /**\n     * @param Integer $n\n     * @return Integer\n     */\n    function trailingZeroes($n) {\n        \n    }\n}",
    "swift": "class Solution {\n    func trailingZeroes(_ n: Int) -> Int {\n        \n    }\n}",
    "kotlin": "class Solution {\n    fun trailingZeroes(n: Int): Int {\n        \n    }\n}",
    "dart": "class Solution {\n  int trailingZeroes(int n) {\n    \n  }\n}",
    "golang": "func trailingZeroes(n int) int {\n    \n}",
    "ruby": "# @param {Integer} n\n# @return {Integer}\ndef trailing_zeroes(n)\n    \nend",
    "scala": "object Solution {\n    def trailingZeroes(n: Int): Int = {\n        \n    }\n}",
    "rust": "impl Solution {\n    pub fn trailing_zeroes(n: i32) -> i32 {\n        \n    }\n}",
    "racket": "(define/contract (trailing-zeroes n)\n  (-> exact-integer? exact-integer?)\n  )",
    "erlang": "-spec trailing_zeroes(N :: integer()) -> integer().\ntrailing_zeroes(N) ->\n  .",
    "elixir": "defmodule Solution do\n  @spec trailing_zeroes(n :: integer) :: integer\n  def trailing_zeroes(n) do\n    \n  end\nend"
  }
}