{
  "title": "Fill Missing Data",
  "problem_id": "3070",
  "frontend_id": "2887",
  "difficulty": "Easy",
  "problem_slug": "fill-missing-data",
  "topics": [],
  "description": "Write a solution to fill in the missing value as 0 in the quantity column.\nThe result format is in the following example.",
  "examples": [
    {
      "example_num": 1,
      "example_text": "DataFrame products\n+-------------+--------+\n| Column Name | Type   |\n+-------------+--------+\n| name        | object |\n| quantity    | int    |\n| price       | int    |\n+-------------+--------+",
      "images": []
    },
    {
      "example_num": 2,
      "example_text": "Example 1:\nInput:+-----------------+----------+-------+\n| name            | quantity | price |\n+-----------------+----------+-------+\n| Wristwatch      | None     | 135   |\n| WirelessEarbuds | None     | 821   |\n| GolfClubs       | 779      | 9319  |\n| Printer         | 849      | 3051  |\n+-----------------+----------+-------+\nOutput:\n+-----------------+----------+-------+\n| name            | quantity | price |\n+-----------------+----------+-------+\n| Wristwatch      | 0        | 135   |\n| WirelessEarbuds | 0        | 821   |\n| GolfClubs       | 779      | 9319  |\n| Printer         | 849      | 3051  |\n+-----------------+----------+-------+\nExplanation: \nThe quantity for Wristwatch and WirelessEarbuds are filled by 0.",
      "images": []
    }
  ],
  "constraints": [],
  "follow_ups": [],
  "hints": [
    "Consider using a build-in function in pandas library to fill the missing values of specified columns."
  ],
  "code_snippets": {
    "pythondata": "import pandas as pd\n\ndef fillMissingValues(products: pd.DataFrame) -> pd.DataFrame:\n    "
  },
  "solution": "[TOC]\n\n## Solution\n--- \n### Overview\n\nIn this problem, we have a DataFrame named `products` that contains product data. However, some of the `quantity` data is missing. The goal is to fill the missing quantity data with the value of 0.\n\n**Key Concepts**:\n1. **DataFrame:** a 2D table-like structure, similar to a spreadsheet or SQL table. Each row represents an individual record and each column represents a different attribute. It is size-mutable designed to handle a mix of different types of data.\n2. **fillna Function:** `fillna` is a function in the pandas library, used primarily with pandas Series and DataFrame objects. It allows you to fill NA/NaN values using specified methods. In this context, we are using it to replace the `None` (or `NaN` in the usual dataframe representation) values.\n\n**`fillna` Function Argument Definition:**\n\nThe `fillna` function has several arguments that you can utilize, but we'll focus on the most commonly used ones:\n\n- **value:** Scalar, dict, Series, or DataFrame. The value to use to fill holes (e.g. 0). This is what we use in our solution.\n\n- **method:** {‘backfill’, ‘bfill’, ‘pad’, ‘ffill’, None}. Method to use for filling holes in reindexed Series. Default is `None`. \n\n- **axis:** {0 or ‘index’, 1 or ‘columns’}. Axis along which to fill missing values. \n\n- **inplace:** Bool. If True, fills in place. Note: this will modify any other views on this object. Default is False.\n\n\n### Intuition\n\nIn our solution, we use:\n\n```python\nproducts['quantity'].fillna(0, inplace=True)\n```\n\n- Since we are trying to fill missing data from the `quantity` column of the `products` DataFrame, we apply the `fillna` function to `products['quantity']`.\n- Since we want to replace missing values (`NaN` or `None`) with `0`, we use the `value` argument as `0`.\n- Finally, we want to return the original DataFrame, so we set `inplace=True` to modify the original DataFrame directly without returning a new one. Note that if you don't use `inplace=True`, you would have to capture the result like this: `products['quantity'] = products['quantity'].fillna(0)`\n\n**Visualization of `fillna` function**\n\n![fig](../Figures/3314/3314-1.png)\n\nWhen you pass the following DataFrame to this function:namequantitypriceWristwatch32135WirelessEarbudsNone821GolfClubsNone9319Printer8493051It will return:namequantitypriceWristwatch32135WirelessEarbuds0821GolfClubs09319Printer8493051### Implementation"
}