{
  "title": "Excel Sheet Column Number",
  "problem_id": "171",
  "frontend_id": "171",
  "difficulty": "Easy",
  "problem_slug": "excel-sheet-column-number",
  "topics": [
    "Math",
    "String"
  ],
  "description": "Given a string columnTitle that represents the column title as appears in an Excel sheet, return its corresponding column number.\nFor example:\nExample 1:\nExample 2:\nExample 3:\nConstraints:",
  "examples": [
    {
      "example_num": 1,
      "example_text": "A -> 1\nB -> 2\nC -> 3\n...\nZ -> 26\nAA -> 27\nAB -> 28 \n...",
      "images": []
    },
    {
      "example_num": 2,
      "example_text": "Input: columnTitle = \"A\"\nOutput: 1",
      "images": []
    },
    {
      "example_num": 3,
      "example_text": "Input: columnTitle = \"AB\"\nOutput: 28",
      "images": []
    },
    {
      "example_num": 4,
      "example_text": "Input: columnTitle = \"ZY\"\nOutput: 701",
      "images": []
    }
  ],
  "constraints": [
    "1 <= columnTitle.length <= 7",
    "columnTitle consists only of uppercase English letters.",
    "columnTitle is in the range [\"A\", \"FXSHRXW\"]."
  ],
  "follow_ups": [],
  "hints": [],
  "code_snippets": {
    "cpp": "class Solution {\npublic:\n    int titleToNumber(string columnTitle) {\n        \n    }\n};",
    "java": "class Solution {\n    public int titleToNumber(String columnTitle) {\n        \n    }\n}",
    "python": "class Solution(object):\n    def titleToNumber(self, columnTitle):\n        \"\"\"\n        :type columnTitle: str\n        :rtype: int\n        \"\"\"\n        ",
    "python3": "class Solution:\n    def titleToNumber(self, columnTitle: str) -> int:\n        ",
    "c": "int titleToNumber(char* columnTitle) {\n    \n}",
    "csharp": "public class Solution {\n    public int TitleToNumber(string columnTitle) {\n        \n    }\n}",
    "javascript": "/**\n * @param {string} columnTitle\n * @return {number}\n */\nvar titleToNumber = function(columnTitle) {\n    \n};",
    "typescript": "function titleToNumber(columnTitle: string): number {\n    \n};",
    "php": "class Solution {\n\n    /**\n     * @param String $columnTitle\n     * @return Integer\n     */\n    function titleToNumber($columnTitle) {\n        \n    }\n}",
    "swift": "class Solution {\n    func titleToNumber(_ columnTitle: String) -> Int {\n        \n    }\n}",
    "kotlin": "class Solution {\n    fun titleToNumber(columnTitle: String): Int {\n        \n    }\n}",
    "dart": "class Solution {\n  int titleToNumber(String columnTitle) {\n    \n  }\n}",
    "golang": "func titleToNumber(columnTitle string) int {\n    \n}",
    "ruby": "# @param {String} column_title\n# @return {Integer}\ndef title_to_number(column_title)\n    \nend",
    "scala": "object Solution {\n    def titleToNumber(columnTitle: String): Int = {\n        \n    }\n}",
    "rust": "impl Solution {\n    pub fn title_to_number(column_title: String) -> i32 {\n        \n    }\n}",
    "racket": "(define/contract (title-to-number columnTitle)\n  (-> string? exact-integer?)\n  )",
    "erlang": "-spec title_to_number(ColumnTitle :: unicode:unicode_binary()) -> integer().\ntitle_to_number(ColumnTitle) ->\n  .",
    "elixir": "defmodule Solution do\n  @spec title_to_number(column_title :: String.t) :: integer\n  def title_to_number(column_title) do\n    \n  end\nend"
  }
}