{
  "title": "Fizz Buzz Multithreaded",
  "problem_id": "1316",
  "frontend_id": "1195",
  "difficulty": "Medium",
  "problem_slug": "fizz-buzz-multithreaded",
  "topics": [
    "Concurrency"
  ],
  "description": "You have the four functions:\nYou are given an instance of the class FizzBuzz that has four functions: fizz, buzz, fizzbuzz and number. The same instance of FizzBuzz will be passed to four different threads:\nModify the given class to output the series [1, 2, \"fizz\", 4, \"buzz\", ...] where the ith token (1-indexed) of the series is:\nImplement the FizzBuzz class:\nExample 1:\nExample 2:\nConstraints:",
  "examples": [
    {
      "example_num": 1,
      "example_text": "Input: n = 15\nOutput: [1,2,\"fizz\",4,\"buzz\",\"fizz\",7,8,\"fizz\",\"buzz\",11,\"fizz\",13,14,\"fizzbuzz\"]",
      "images": []
    },
    {
      "example_num": 2,
      "example_text": "Input: n = 5\nOutput: [1,2,\"fizz\",4,\"buzz\"]",
      "images": []
    }
  ],
  "constraints": [
    "1 <= n <= 50"
  ],
  "follow_ups": [],
  "hints": [],
  "code_snippets": {
    "cpp": "class FizzBuzz {\nprivate:\n    int n;\n\npublic:\n    FizzBuzz(int n) {\n        this->n = n;\n    }\n\n    // printFizz() outputs \"fizz\".\n    void fizz(function<void()> printFizz) {\n        \n    }\n\n    // printBuzz() outputs \"buzz\".\n    void buzz(function<void()> printBuzz) {\n        \n    }\n\n    // printFizzBuzz() outputs \"fizzbuzz\".\n\tvoid fizzbuzz(function<void()> printFizzBuzz) {\n        \n    }\n\n    // printNumber(x) outputs \"x\", where x is an integer.\n    void number(function<void(int)> printNumber) {\n        \n    }\n};",
    "java": "class FizzBuzz {\n    private int n;\n\n    public FizzBuzz(int n) {\n        this.n = n;\n    }\n\n    // printFizz.run() outputs \"fizz\".\n    public void fizz(Runnable printFizz) throws InterruptedException {\n        \n    }\n\n    // printBuzz.run() outputs \"buzz\".\n    public void buzz(Runnable printBuzz) throws InterruptedException {\n        \n    }\n\n    // printFizzBuzz.run() outputs \"fizzbuzz\".\n    public void fizzbuzz(Runnable printFizzBuzz) throws InterruptedException {\n        \n    }\n\n    // printNumber.accept(x) outputs \"x\", where x is an integer.\n    public void number(IntConsumer printNumber) throws InterruptedException {\n        \n    }\n}",
    "python": "class FizzBuzz(object):\n    def __init__(self, n):\n        self.n = n\n\n    # printFizz() outputs \"fizz\"\n    def fizz(self, printFizz):\n        \"\"\"\n        :type printFizz: method\n        :rtype: void\n        \"\"\"\n    \t\n\n    # printBuzz() outputs \"buzz\"\n    def buzz(self, printBuzz):\n        \"\"\"\n        :type printBuzz: method\n        :rtype: void\n        \"\"\"\n    \t\n\n    # printFizzBuzz() outputs \"fizzbuzz\"\n    def fizzbuzz(self, printFizzBuzz):\n        \"\"\"\n        :type printFizzBuzz: method\n        :rtype: void\n        \"\"\"\n        \n\n    # printNumber(x) outputs \"x\", where x is an integer.\n    def number(self, printNumber):\n        \"\"\"\n        :type printNumber: method\n        :rtype: void\n        \"\"\"\n        ",
    "python3": "class FizzBuzz:\n    def __init__(self, n: int):\n        self.n = n\n\n    # printFizz() outputs \"fizz\"\n    def fizz(self, printFizz: 'Callable[[], None]') -> None:\n    \t\n\n    # printBuzz() outputs \"buzz\"\n    def buzz(self, printBuzz: 'Callable[[], None]') -> None:\n    \t\n\n    # printFizzBuzz() outputs \"fizzbuzz\"\n    def fizzbuzz(self, printFizzBuzz: 'Callable[[], None]') -> None:\n        \n\n    # printNumber(x) outputs \"x\", where x is an integer.\n    def number(self, printNumber: 'Callable[[int], None]') -> None:\n        ",
    "c": "typedef struct {\n    int n;\n} FizzBuzz;\n\nFizzBuzz* fizzBuzzCreate(int n) {\n    FizzBuzz* obj = (FizzBuzz*) malloc(sizeof(FizzBuzz));\n    obj->n = n;\n    return obj;\n}\n\n// Don't change the following declarations\nvoid printNumber(int a);\nvoid printFizz();\nvoid printBuzz();\nvoid printFizzBuzz();\n\n// printFizz() outputs \"fizz\".\nvoid fizz(FizzBuzz* obj) {\n    \n}\n\n// printBuzz() outputs \"buzz\".\nvoid buzz(FizzBuzz* obj) {\n    \n}\n\n// printFizzBuzz() outputs \"fizzbuzz\".\nvoid fizzbuzz(FizzBuzz* obj) {\n    \n}\n\n// You may call global function `void printNumber(int x)`\n// to output \"x\", where x is an integer.\nvoid number(FizzBuzz* obj) {\n    \n}\n\nvoid fizzBuzzFree(FizzBuzz* obj) {\n    \n}",
    "csharp": "public class FizzBuzz {\n    private int n;\n\n    public FizzBuzz(int n) {\n        this.n = n;\n    }\n\n    // printFizz() outputs \"fizz\".\n    public void Fizz(Action printFizz) {\n        \n    }\n\n    // printBuzzz() outputs \"buzz\".\n    public void Buzz(Action printBuzz) {\n        \n    }\n\n    // printFizzBuzz() outputs \"fizzbuzz\".\n    public void Fizzbuzz(Action printFizzBuzz) {\n        \n    }\n\n    // printNumber(x) outputs \"x\", where x is an integer.\n    public void Number(Action<int> printNumber) {\n        \n    }\n}"
  }
}