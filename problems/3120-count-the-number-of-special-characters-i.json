{
  "title": "Count the Number of Special Characters I",
  "problem_id": "3408",
  "frontend_id": "3120",
  "difficulty": "Easy",
  "problem_slug": "count-the-number-of-special-characters-i",
  "topics": [
    "Hash Table",
    "String"
  ],
  "description": "You are given a string word. A letter is called special if it appears both in lowercase and uppercase in word.\nReturn the number of special letters in word.\nExample 1:\nExample 2:\nExample 3:\nConstraints:",
  "examples": [
    {
      "example_num": 1,
      "example_text": "Input: word = \"aaAbcBC\"\nOutput: 3\nExplanation:\nThe special characters in word are 'a' , 'b' , and 'c' .",
      "images": []
    },
    {
      "example_num": 2,
      "example_text": "Input: word = \"abc\"\nOutput: 0\nExplanation:\nNo character in word appears in uppercase.",
      "images": []
    },
    {
      "example_num": 3,
      "example_text": "Input: word = \"abBCab\"\nOutput: 1\nExplanation:\nThe only special character in word is 'b' .",
      "images": []
    }
  ],
  "constraints": [
    "1 <= word.length <= 50",
    "word consists of only lowercase and uppercase English letters."
  ],
  "follow_ups": [],
  "hints": [
    "The constraints are small. For all 52 characters, check if they are present in <code>word</code>."
  ],
  "code_snippets": {
    "cpp": "class Solution {\npublic:\n    int numberOfSpecialChars(string word) {\n        \n    }\n};",
    "java": "class Solution {\n    public int numberOfSpecialChars(String word) {\n        \n    }\n}",
    "python": "class Solution(object):\n    def numberOfSpecialChars(self, word):\n        \"\"\"\n        :type word: str\n        :rtype: int\n        \"\"\"\n        ",
    "python3": "class Solution:\n    def numberOfSpecialChars(self, word: str) -> int:\n        ",
    "c": "int numberOfSpecialChars(char* word) {\n    \n}",
    "csharp": "public class Solution {\n    public int NumberOfSpecialChars(string word) {\n        \n    }\n}",
    "javascript": "/**\n * @param {string} word\n * @return {number}\n */\nvar numberOfSpecialChars = function(word) {\n    \n};",
    "typescript": "function numberOfSpecialChars(word: string): number {\n    \n};",
    "php": "class Solution {\n\n    /**\n     * @param String $word\n     * @return Integer\n     */\n    function numberOfSpecialChars($word) {\n        \n    }\n}",
    "swift": "class Solution {\n    func numberOfSpecialChars(_ word: String) -> Int {\n        \n    }\n}",
    "kotlin": "class Solution {\n    fun numberOfSpecialChars(word: String): Int {\n        \n    }\n}",
    "dart": "class Solution {\n  int numberOfSpecialChars(String word) {\n    \n  }\n}",
    "golang": "func numberOfSpecialChars(word string) int {\n    \n}",
    "ruby": "# @param {String} word\n# @return {Integer}\ndef number_of_special_chars(word)\n    \nend",
    "scala": "object Solution {\n    def numberOfSpecialChars(word: String): Int = {\n        \n    }\n}",
    "rust": "impl Solution {\n    pub fn number_of_special_chars(word: String) -> i32 {\n        \n    }\n}",
    "racket": "(define/contract (number-of-special-chars word)\n  (-> string? exact-integer?)\n  )",
    "erlang": "-spec number_of_special_chars(Word :: unicode:unicode_binary()) -> integer().\nnumber_of_special_chars(Word) ->\n  .",
    "elixir": "defmodule Solution do\n  @spec number_of_special_chars(word :: String.t) :: integer\n  def number_of_special_chars(word) do\n    \n  end\nend"
  }
}