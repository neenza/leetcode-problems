{
  "title": "Check If Digits Are Equal in String After Operations II",
  "problem_id": "3774",
  "frontend_id": "3463",
  "difficulty": "Hard",
  "problem_slug": "check-if-digits-are-equal-in-string-after-operations-ii",
  "topics": [
    "Math",
    "String",
    "Combinatorics",
    "Number Theory"
  ],
  "description": "You are given a string s consisting of digits. Perform the following operation repeatedly until the string has exactly two digits:\nReturn true if the final two digits in s are the same; otherwise, return false.\nExample 1:\nExample 2:\nConstraints:",
  "examples": [
    {
      "example_num": 1,
      "example_text": "Input: s = \"3902\"\nOutput: true\nExplanation:",
      "images": []
    },
    {
      "example_num": 2,
      "example_text": "Input: s = \"34789\"\nOutput: false\nExplanation:",
      "images": []
    }
  ],
  "constraints": [
    "3 <= s.length <= 105",
    "s consists of only digits."
  ],
  "follow_ups": [],
  "hints": [
    "Can we use <code>nCr</code> and use Pascal's triangle values here?",
    "<code>nCr mod 10</code> can be uniquely determined from <code>nCr mod 2</code> and <code>nCr mod 5</code>.",
    "Use Lucas's theorem."
  ],
  "code_snippets": {
    "cpp": "class Solution {\npublic:\n    bool hasSameDigits(string s) {\n        \n    }\n};",
    "java": "class Solution {\n    public boolean hasSameDigits(String s) {\n        \n    }\n}",
    "python": "class Solution(object):\n    def hasSameDigits(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: bool\n        \"\"\"\n        ",
    "python3": "class Solution:\n    def hasSameDigits(self, s: str) -> bool:\n        ",
    "c": "bool hasSameDigits(char* s) {\n    \n}",
    "csharp": "public class Solution {\n    public bool HasSameDigits(string s) {\n        \n    }\n}",
    "javascript": "/**\n * @param {string} s\n * @return {boolean}\n */\nvar hasSameDigits = function(s) {\n    \n};",
    "typescript": "function hasSameDigits(s: string): boolean {\n    \n};",
    "php": "class Solution {\n\n    /**\n     * @param String $s\n     * @return Boolean\n     */\n    function hasSameDigits($s) {\n        \n    }\n}",
    "swift": "class Solution {\n    func hasSameDigits(_ s: String) -> Bool {\n        \n    }\n}",
    "kotlin": "class Solution {\n    fun hasSameDigits(s: String): Boolean {\n        \n    }\n}",
    "dart": "class Solution {\n  bool hasSameDigits(String s) {\n    \n  }\n}",
    "golang": "func hasSameDigits(s string) bool {\n    \n}",
    "ruby": "# @param {String} s\n# @return {Boolean}\ndef has_same_digits(s)\n    \nend",
    "scala": "object Solution {\n    def hasSameDigits(s: String): Boolean = {\n        \n    }\n}",
    "rust": "impl Solution {\n    pub fn has_same_digits(s: String) -> bool {\n        \n    }\n}",
    "racket": "(define/contract (has-same-digits s)\n  (-> string? boolean?)\n  )",
    "erlang": "-spec has_same_digits(S :: unicode:unicode_binary()) -> boolean().\nhas_same_digits(S) ->\n  .",
    "elixir": "defmodule Solution do\n  @spec has_same_digits(s :: String.t) :: boolean\n  def has_same_digits(s) do\n    \n  end\nend"
  }
}