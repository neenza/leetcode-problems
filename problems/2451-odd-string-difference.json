{
  "title": "Odd String Difference",
  "problem_id": "2547",
  "frontend_id": "2451",
  "difficulty": "Easy",
  "problem_slug": "odd-string-difference",
  "topics": [
    "Array",
    "Hash Table",
    "String"
  ],
  "description": "You are given an array of equal-length strings words. Assume that the length of each string is n.\nEach string words[i] can be converted into a difference integer array difference[i] of length n - 1 where difference[i][j] = words[i][j+1] - words[i][j] where 0 <= j <= n - 2. Note that the difference between two letters is the difference between their positions in the alphabet i.e.Â the position of 'a' is 0, 'b' is 1, and 'z' is 25.\nAll the strings in words have the same difference integer array, except one. You should find that string.\nReturn the string in words that has different difference integer array.\nExample 1:\nExample 2:\nConstraints:",
  "examples": [
    {
      "example_num": 1,
      "example_text": "Input: words = [\"adc\",\"wzy\",\"abc\"]\nOutput: \"abc\"\nExplanation: \n- The difference integer array of \"adc\" is [3 - 0, 2 - 3] = [3, -1].\n- The difference integer array of \"wzy\" is [25 - 22, 24 - 25]= [3, -1].\n- The difference integer array of \"abc\" is [1 - 0, 2 - 1] = [1, 1]. \nThe odd array out is [1, 1], so we return the corresponding string, \"abc\".",
      "images": []
    },
    {
      "example_num": 2,
      "example_text": "Input: words = [\"aaa\",\"bob\",\"ccc\",\"ddd\"]\nOutput: \"bob\"\nExplanation: All the integer arrays are [0, 0] except for \"bob\", which corresponds to [13, -13].",
      "images": []
    }
  ],
  "constraints": [
    "3 <= words.length <= 100",
    "n == words[i].length",
    "2 <= n <= 20",
    "words[i] consists of lowercase English letters."
  ],
  "follow_ups": [],
  "hints": [
    "Find the difference integer array for each string.",
    "Compare them to find the odd one out."
  ],
  "code_snippets": {
    "cpp": "class Solution {\npublic:\n    string oddString(vector<string>& words) {\n        \n    }\n};",
    "java": "class Solution {\n    public String oddString(String[] words) {\n        \n    }\n}",
    "python": "class Solution(object):\n    def oddString(self, words):\n        \"\"\"\n        :type words: List[str]\n        :rtype: str\n        \"\"\"\n        ",
    "python3": "class Solution:\n    def oddString(self, words: List[str]) -> str:\n        ",
    "c": "char* oddString(char** words, int wordsSize) {\n    \n}",
    "csharp": "public class Solution {\n    public string OddString(string[] words) {\n        \n    }\n}",
    "javascript": "/**\n * @param {string[]} words\n * @return {string}\n */\nvar oddString = function(words) {\n    \n};",
    "typescript": "function oddString(words: string[]): string {\n    \n};",
    "php": "class Solution {\n\n    /**\n     * @param String[] $words\n     * @return String\n     */\n    function oddString($words) {\n        \n    }\n}",
    "swift": "class Solution {\n    func oddString(_ words: [String]) -> String {\n        \n    }\n}",
    "kotlin": "class Solution {\n    fun oddString(words: Array<String>): String {\n        \n    }\n}",
    "dart": "class Solution {\n  String oddString(List<String> words) {\n    \n  }\n}",
    "golang": "func oddString(words []string) string {\n    \n}",
    "ruby": "# @param {String[]} words\n# @return {String}\ndef odd_string(words)\n    \nend",
    "scala": "object Solution {\n    def oddString(words: Array[String]): String = {\n        \n    }\n}",
    "rust": "impl Solution {\n    pub fn odd_string(words: Vec<String>) -> String {\n        \n    }\n}",
    "racket": "(define/contract (odd-string words)\n  (-> (listof string?) string?)\n  )",
    "erlang": "-spec odd_string(Words :: [unicode:unicode_binary()]) -> unicode:unicode_binary().\nodd_string(Words) ->\n  .",
    "elixir": "defmodule Solution do\n  @spec odd_string(words :: [String.t]) :: String.t\n  def odd_string(words) do\n    \n  end\nend"
  }
}