{
  "title": "Reverse Vowels of a String",
  "problem_id": "345",
  "frontend_id": "345",
  "difficulty": "Easy",
  "problem_slug": "reverse-vowels-of-a-string",
  "topics": [
    "Two Pointers",
    "String"
  ],
  "description": "Given a string s, reverse only all the vowels in the string and return it.\nThe vowels are 'a', 'e', 'i', 'o', and 'u', and they can appear in both lower and upper cases, more than once.\nExample 1:\nExample 2:\nConstraints:",
  "examples": [
    {
      "example_num": 1,
      "example_text": "Input: s = \"IceCreAm\"\nOutput: \"AceCreIm\"\nExplanation:\nThe vowels in s are ['I', 'e', 'e', 'A'] . On reversing the vowels, s becomes \"AceCreIm\" .",
      "images": []
    },
    {
      "example_num": 2,
      "example_text": "Input: s = \"leetcode\"\nOutput: \"leotcede\"",
      "images": []
    }
  ],
  "constraints": [
    "1 <= s.length <= 3 * 105",
    "s consist of printable ASCII characters."
  ],
  "follow_ups": [],
  "hints": [],
  "code_snippets": {
    "cpp": "class Solution {\npublic:\n    string reverseVowels(string s) {\n        \n    }\n};",
    "java": "class Solution {\n    public String reverseVowels(String s) {\n        \n    }\n}",
    "python": "class Solution(object):\n    def reverseVowels(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: str\n        \"\"\"\n        ",
    "python3": "class Solution:\n    def reverseVowels(self, s: str) -> str:\n        ",
    "c": "char* reverseVowels(char* s) {\n    \n}",
    "csharp": "public class Solution {\n    public string ReverseVowels(string s) {\n        \n    }\n}",
    "javascript": "/**\n * @param {string} s\n * @return {string}\n */\nvar reverseVowels = function(s) {\n    \n};",
    "typescript": "function reverseVowels(s: string): string {\n    \n};",
    "php": "class Solution {\n\n    /**\n     * @param String $s\n     * @return String\n     */\n    function reverseVowels($s) {\n        \n    }\n}",
    "swift": "class Solution {\n    func reverseVowels(_ s: String) -> String {\n        \n    }\n}",
    "kotlin": "class Solution {\n    fun reverseVowels(s: String): String {\n        \n    }\n}",
    "dart": "class Solution {\n  String reverseVowels(String s) {\n    \n  }\n}",
    "golang": "func reverseVowels(s string) string {\n    \n}",
    "ruby": "# @param {String} s\n# @return {String}\ndef reverse_vowels(s)\n    \nend",
    "scala": "object Solution {\n    def reverseVowels(s: String): String = {\n        \n    }\n}",
    "rust": "impl Solution {\n    pub fn reverse_vowels(s: String) -> String {\n        \n    }\n}",
    "racket": "(define/contract (reverse-vowels s)\n  (-> string? string?)\n  )",
    "erlang": "-spec reverse_vowels(S :: unicode:unicode_binary()) -> unicode:unicode_binary().\nreverse_vowels(S) ->\n  .",
    "elixir": "defmodule Solution do\n  @spec reverse_vowels(s :: String.t) :: String.t\n  def reverse_vowels(s) do\n    \n  end\nend"
  }
}