{
  "title": "Filter Elements from Array",
  "problem_id": "2746",
  "frontend_id": "2634",
  "difficulty": "Easy",
  "problem_slug": "filter-elements-from-array",
  "topics": [],
  "description": "Given an integer array arr and a filtering function fn, return a filtered array filteredArr.\nThe fn function takes one or two arguments:\nfilteredArr should only contain the elements from the arr for which the expression fn(arr[i], i) evaluates to a truthy value. A truthy value is a value where Boolean(value) returns true.\nPlease solve it without the built-in Array.filter method.\nExample 1:\nExample 2:\nExample 3:\nConstraints:",
  "examples": [
    {
      "example_num": 1,
      "example_text": "Input: arr = [0,10,20,30], fn = function greaterThan10(n) { return n > 10; }\nOutput: [20,30]\nExplanation:\nconst newArray = filter(arr, fn); // [20, 30]\nThe function filters out values that are not greater than 10",
      "images": []
    },
    {
      "example_num": 2,
      "example_text": "Input: arr = [1,2,3], fn = function firstIndex(n, i) { return i === 0; }\nOutput: [1]\nExplanation:\nfn can also accept the index of each element\nIn this case, the function removes elements not at index 0",
      "images": []
    },
    {
      "example_num": 3,
      "example_text": "Input: arr = [-2,-1,0,1,2], fn = function plusOne(n) { return n + 1 }\nOutput: [-2,0,1,2]\nExplanation:\nFalsey values such as 0 should be filtered out",
      "images": []
    }
  ],
  "constraints": [
    "0 <= arr.length <= 1000",
    "-109 <= arr[i] <= 109"
  ],
  "follow_ups": [],
  "hints": [
    "Start by declaring a new array which will eventually be returned.",
    "In Javascript, there is the concept of \"truthiness\" and \"falsiness\". Values such as 0, undefined, null, and false are falsy. Most values are truthy: 1, {}, [], true, etc. In Javascript, the contents of if-statements don't need to be booleans. You can say \"if ([1,2,3]) {}\", and it's equivalent to saying 'if (true) {}\".",
    "Loop over each element in the array. If fn(arr[i]) is truthy, push it to the array."
  ],
  "code_snippets": {
    "javascript": "/**\n * @param {number[]} arr\n * @param {Function} fn\n * @return {number[]}\n */\nvar filter = function(arr, fn) {\n    \n};",
    "typescript": "type Fn = (n: number, i: number) => any\n\nfunction filter(arr: number[], fn: Fn): number[] {\n    \n};"
  }
}