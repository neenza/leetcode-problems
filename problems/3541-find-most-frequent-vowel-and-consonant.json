{
  "title": "Find Most Frequent Vowel and Consonant",
  "problem_id": "3872",
  "frontend_id": "3541",
  "difficulty": "Easy",
  "problem_slug": "find-most-frequent-vowel-and-consonant",
  "topics": [
    "Hash Table",
    "String",
    "Counting"
  ],
  "description": "You are given a string s consisting of lowercase English letters ('a' to 'z').\nYour task is to:\nReturn the sum of the two frequencies.\nNote: If multiple vowels or consonants have the same maximum frequency, you may choose any one of them. If there are no vowels or no consonants in the string, consider their frequency as 0.\nExample 1:\nExample 2:\nConstraints:",
  "examples": [
    {
      "example_num": 1,
      "example_text": "Input: s = \"successes\"\nOutput: 6\nExplanation:",
      "images": []
    },
    {
      "example_num": 2,
      "example_text": "Input: s = \"aeiaeia\"\nOutput: 3\nExplanation:",
      "images": []
    }
  ],
  "constraints": [
    "1 <= s.length <= 100",
    "s consists of lowercase English letters only."
  ],
  "follow_ups": [],
  "hints": [
    "Use a hashmap",
    "Simulate as described"
  ],
  "code_snippets": {
    "cpp": "class Solution {\npublic:\n    int maxFreqSum(string s) {\n        \n    }\n};",
    "java": "class Solution {\n    public int maxFreqSum(String s) {\n        \n    }\n}",
    "python": "class Solution(object):\n    def maxFreqSum(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: int\n        \"\"\"\n        ",
    "python3": "class Solution:\n    def maxFreqSum(self, s: str) -> int:\n        ",
    "c": "int maxFreqSum(char* s) {\n    \n}",
    "csharp": "public class Solution {\n    public int MaxFreqSum(string s) {\n        \n    }\n}",
    "javascript": "/**\n * @param {string} s\n * @return {number}\n */\nvar maxFreqSum = function(s) {\n    \n};",
    "typescript": "function maxFreqSum(s: string): number {\n    \n};",
    "php": "class Solution {\n\n    /**\n     * @param String $s\n     * @return Integer\n     */\n    function maxFreqSum($s) {\n        \n    }\n}",
    "swift": "class Solution {\n    func maxFreqSum(_ s: String) -> Int {\n        \n    }\n}",
    "kotlin": "class Solution {\n    fun maxFreqSum(s: String): Int {\n        \n    }\n}",
    "dart": "class Solution {\n  int maxFreqSum(String s) {\n    \n  }\n}",
    "golang": "func maxFreqSum(s string) int {\n    \n}",
    "ruby": "# @param {String} s\n# @return {Integer}\ndef max_freq_sum(s)\n    \nend",
    "scala": "object Solution {\n    def maxFreqSum(s: String): Int = {\n        \n    }\n}",
    "rust": "impl Solution {\n    pub fn max_freq_sum(s: String) -> i32 {\n        \n    }\n}",
    "racket": "(define/contract (max-freq-sum s)\n  (-> string? exact-integer?)\n  )",
    "erlang": "-spec max_freq_sum(S :: unicode:unicode_binary()) -> integer().\nmax_freq_sum(S) ->\n  .",
    "elixir": "defmodule Solution do\n  @spec max_freq_sum(s :: String.t) :: integer\n  def max_freq_sum(s) do\n    \n  end\nend"
  }
}