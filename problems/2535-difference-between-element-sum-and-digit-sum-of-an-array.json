{
  "title": "Difference Between Element Sum and Digit Sum of an Array",
  "problem_id": "2624",
  "frontend_id": "2535",
  "difficulty": "Easy",
  "problem_slug": "difference-between-element-sum-and-digit-sum-of-an-array",
  "topics": [
    "Array",
    "Math"
  ],
  "description": "You are given a positive integer array nums.\nReturn the absolute difference between the element sum and digit sum of nums.\nNote that the absolute difference between two integers x and y is defined as |x - y|.\nExample 1:\nExample 2:\nConstraints:",
  "examples": [
    {
      "example_num": 1,
      "example_text": "Input: nums = [1,15,6,3]\nOutput: 9\nExplanation: \nThe element sum of nums is 1 + 15 + 6 + 3 = 25.\nThe digit sum of nums is 1 + 1 + 5 + 6 + 3 = 16.\nThe absolute difference between the element sum and digit sum is |25 - 16| = 9.",
      "images": []
    },
    {
      "example_num": 2,
      "example_text": "Input: nums = [1,2,3,4]\nOutput: 0\nExplanation:\nThe element sum of nums is 1 + 2 + 3 + 4 = 10.\nThe digit sum of nums is 1 + 2 + 3 + 4 = 10.\nThe absolute difference between the element sum and digit sum is |10 - 10| = 0.",
      "images": []
    }
  ],
  "constraints": [
    "1 <= nums.length <= 2000",
    "1 <= nums[i] <= 2000"
  ],
  "follow_ups": [],
  "hints": [
    "Use a simple for loop to iterate each number.",
    "How you can get the digit for each number?"
  ],
  "code_snippets": {
    "cpp": "class Solution {\npublic:\n    int differenceOfSum(vector<int>& nums) {\n        \n    }\n};",
    "java": "class Solution {\n    public int differenceOfSum(int[] nums) {\n        \n    }\n}",
    "python": "class Solution(object):\n    def differenceOfSum(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: int\n        \"\"\"\n        ",
    "python3": "class Solution:\n    def differenceOfSum(self, nums: List[int]) -> int:\n        ",
    "c": "int differenceOfSum(int* nums, int numsSize) {\n    \n}",
    "csharp": "public class Solution {\n    public int DifferenceOfSum(int[] nums) {\n        \n    }\n}",
    "javascript": "/**\n * @param {number[]} nums\n * @return {number}\n */\nvar differenceOfSum = function(nums) {\n    \n};",
    "typescript": "function differenceOfSum(nums: number[]): number {\n    \n};",
    "php": "class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @return Integer\n     */\n    function differenceOfSum($nums) {\n        \n    }\n}",
    "swift": "class Solution {\n    func differenceOfSum(_ nums: [Int]) -> Int {\n        \n    }\n}",
    "kotlin": "class Solution {\n    fun differenceOfSum(nums: IntArray): Int {\n        \n    }\n}",
    "dart": "class Solution {\n  int differenceOfSum(List<int> nums) {\n    \n  }\n}",
    "golang": "func differenceOfSum(nums []int) int {\n    \n}",
    "ruby": "# @param {Integer[]} nums\n# @return {Integer}\ndef difference_of_sum(nums)\n    \nend",
    "scala": "object Solution {\n    def differenceOfSum(nums: Array[Int]): Int = {\n        \n    }\n}",
    "rust": "impl Solution {\n    pub fn difference_of_sum(nums: Vec<i32>) -> i32 {\n        \n    }\n}",
    "racket": "(define/contract (difference-of-sum nums)\n  (-> (listof exact-integer?) exact-integer?)\n  )",
    "erlang": "-spec difference_of_sum(Nums :: [integer()]) -> integer().\ndifference_of_sum(Nums) ->\n  .",
    "elixir": "defmodule Solution do\n  @spec difference_of_sum(nums :: [integer]) :: integer\n  def difference_of_sum(nums) do\n    \n  end\nend"
  }
}