{
  "title": "Count of Substrings Containing Every Vowel and K Consonants I",
  "problem_id": "3570",
  "frontend_id": "3305",
  "difficulty": "Medium",
  "problem_slug": "count-of-substrings-containing-every-vowel-and-k-consonants-i",
  "topics": [
    "Hash Table",
    "String",
    "Sliding Window"
  ],
  "description": "You are given a string word and a non-negative integer k.\nReturn the total number of substrings of word that contain every vowel ('a', 'e', 'i', 'o', and 'u') at least once and exactly k consonants.\nExample 1:\nExample 2:\nExample 3:\nConstraints:",
  "examples": [
    {
      "example_num": 1,
      "example_text": "Input: word = \"aeioqq\", k = 1\nOutput: 0\nExplanation:\nThere is no substring with every vowel.",
      "images": []
    },
    {
      "example_num": 2,
      "example_text": "Input: word = \"aeiou\", k = 0\nOutput: 1\nExplanation:\nThe only substring with every vowel and zero consonants is word[0..4] , which is \"aeiou\" .",
      "images": []
    },
    {
      "example_num": 3,
      "example_text": "Input: word = \" ieaouqqieaouqq \", k = 1\nOutput: 3\nExplanation:\nThe substrings with every vowel and one consonant are:",
      "images": []
    }
  ],
  "constraints": [
    "5 <= word.length <= 250",
    "word consists only of lowercase English letters.",
    "0 <= k <= word.length - 5"
  ],
  "follow_ups": [],
  "hints": [
    "Use a HashMap and check all the substrings."
  ],
  "code_snippets": {
    "cpp": "class Solution {\npublic:\n    int countOfSubstrings(string word, int k) {\n        \n    }\n};",
    "java": "class Solution {\n    public int countOfSubstrings(String word, int k) {\n        \n    }\n}",
    "python": "class Solution(object):\n    def countOfSubstrings(self, word, k):\n        \"\"\"\n        :type word: str\n        :type k: int\n        :rtype: int\n        \"\"\"\n        ",
    "python3": "class Solution:\n    def countOfSubstrings(self, word: str, k: int) -> int:\n        ",
    "c": "int countOfSubstrings(char* word, int k) {\n    \n}",
    "csharp": "public class Solution {\n    public int CountOfSubstrings(string word, int k) {\n        \n    }\n}",
    "javascript": "/**\n * @param {string} word\n * @param {number} k\n * @return {number}\n */\nvar countOfSubstrings = function(word, k) {\n    \n};",
    "typescript": "function countOfSubstrings(word: string, k: number): number {\n    \n};",
    "php": "class Solution {\n\n    /**\n     * @param String $word\n     * @param Integer $k\n     * @return Integer\n     */\n    function countOfSubstrings($word, $k) {\n        \n    }\n}",
    "swift": "class Solution {\n    func countOfSubstrings(_ word: String, _ k: Int) -> Int {\n        \n    }\n}",
    "kotlin": "class Solution {\n    fun countOfSubstrings(word: String, k: Int): Int {\n        \n    }\n}",
    "dart": "class Solution {\n  int countOfSubstrings(String word, int k) {\n    \n  }\n}",
    "golang": "func countOfSubstrings(word string, k int) int {\n    \n}",
    "ruby": "# @param {String} word\n# @param {Integer} k\n# @return {Integer}\ndef count_of_substrings(word, k)\n    \nend",
    "scala": "object Solution {\n    def countOfSubstrings(word: String, k: Int): Int = {\n        \n    }\n}",
    "rust": "impl Solution {\n    pub fn count_of_substrings(word: String, k: i32) -> i32 {\n        \n    }\n}",
    "racket": "(define/contract (count-of-substrings word k)\n  (-> string? exact-integer? exact-integer?)\n  )",
    "erlang": "-spec count_of_substrings(Word :: unicode:unicode_binary(), K :: integer()) -> integer().\ncount_of_substrings(Word, K) ->\n  .",
    "elixir": "defmodule Solution do\n  @spec count_of_substrings(word :: String.t, k :: integer) :: integer\n  def count_of_substrings(word, k) do\n    \n  end\nend"
  }
}