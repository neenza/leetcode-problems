{
  "title": "Return Length of Arguments Passed",
  "problem_id": "2820",
  "frontend_id": "2703",
  "difficulty": "Easy",
  "problem_slug": "return-length-of-arguments-passed",
  "topics": [],
  "description": "Example 1:\nExample 2:\nConstraints:",
  "examples": [
    {
      "example_num": 1,
      "example_text": "Input: args = [5]\nOutput: 1\nExplanation:\nargumentsLength(5); // 1\n\nOne value was passed to the function so it should return 1.",
      "images": []
    },
    {
      "example_num": 2,
      "example_text": "Input: args = [{}, null, \"3\"]\nOutput: 3\nExplanation: \nargumentsLength({}, null, \"3\"); // 3\n\nThree values were passed to the function so it should return 3.",
      "images": []
    }
  ],
  "constraints": [
    "argsÂ is a valid JSON array",
    "0 <= args.length <= 100"
  ],
  "follow_ups": [],
  "hints": [],
  "code_snippets": {
    "javascript": "/**\n * @param {...(null|boolean|number|string|Array|Object)} args\n * @return {number}\n */\nvar argumentsLength = function(...args) {\n    \n};\n\n/**\n * argumentsLength(1, 2, 3); // 3\n */",
    "typescript": "type JSONValue = null | boolean | number | string | JSONValue[] | { [key: string]: JSONValue };\n\nfunction argumentsLength(...args: JSONValue[]): number {\n    \n};\n\n/**\n * argumentsLength(1, 2, 3); // 3\n */"
  }
}