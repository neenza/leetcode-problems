{
  "title": "Find the Number of Winning Players",
  "problem_id": "3519",
  "frontend_id": "3238",
  "difficulty": "Easy",
  "problem_slug": "find-the-number-of-winning-players",
  "topics": [
    "Array",
    "Hash Table",
    "Counting"
  ],
  "description": "You are given an integer n representing the number of players in a game and a 2D array pick where pick[i] = [xi, yi] represents that the player xi picked a ball of color yi.\nPlayer i wins the game if they pick strictly more than i balls of the same color. In other words,\nReturn the number of players who win the game.\nNote that multiple players can win the game.\nExample 1:\nExample 2:\nExample 3:\nConstraints:",
  "examples": [
    {
      "example_num": 1,
      "example_text": "Input: n = 4, pick = [[0,0],[1,0],[1,0],[2,1],[2,1],[2,0]]\nOutput: 2\nExplanation:\nPlayer 0 and player 1 win the game, while players 2 and 3 do not win.",
      "images": []
    },
    {
      "example_num": 2,
      "example_text": "Input: n = 5, pick = [[1,1],[1,2],[1,3],[1,4]]\nOutput: 0\nExplanation:\nNo player wins the game.",
      "images": []
    },
    {
      "example_num": 3,
      "example_text": "Input: n = 5, pick = [[1,1],[2,4],[2,4],[2,4]]\nOutput: 1\nExplanation:\nPlayer 2 wins the game by picking 3 balls with color 4.",
      "images": []
    }
  ],
  "constraints": [
    "2 <= n <= 10",
    "1 <= pick.length <= 100",
    "pick[i].length == 2",
    "0 <= xi <= n - 1",
    "0 <= yi <= 10"
  ],
  "follow_ups": [],
  "hints": [
    "Keep track of the number of balls of each color for each user using hashing.",
    "Find the maximum color that occurred for each player."
  ],
  "code_snippets": {
    "cpp": "class Solution {\npublic:\n    int winningPlayerCount(int n, vector<vector<int>>& pick) {\n        \n    }\n};",
    "java": "class Solution {\n    public int winningPlayerCount(int n, int[][] pick) {\n        \n    }\n}",
    "python": "class Solution(object):\n    def winningPlayerCount(self, n, pick):\n        \"\"\"\n        :type n: int\n        :type pick: List[List[int]]\n        :rtype: int\n        \"\"\"\n        ",
    "python3": "class Solution:\n    def winningPlayerCount(self, n: int, pick: List[List[int]]) -> int:\n        ",
    "c": "int winningPlayerCount(int n, int** pick, int pickSize, int* pickColSize) {\n    \n}",
    "csharp": "public class Solution {\n    public int WinningPlayerCount(int n, int[][] pick) {\n        \n    }\n}",
    "javascript": "/**\n * @param {number} n\n * @param {number[][]} pick\n * @return {number}\n */\nvar winningPlayerCount = function(n, pick) {\n    \n};",
    "typescript": "function winningPlayerCount(n: number, pick: number[][]): number {\n    \n};",
    "php": "class Solution {\n\n    /**\n     * @param Integer $n\n     * @param Integer[][] $pick\n     * @return Integer\n     */\n    function winningPlayerCount($n, $pick) {\n        \n    }\n}",
    "swift": "class Solution {\n    func winningPlayerCount(_ n: Int, _ pick: [[Int]]) -> Int {\n        \n    }\n}",
    "kotlin": "class Solution {\n    fun winningPlayerCount(n: Int, pick: Array<IntArray>): Int {\n        \n    }\n}",
    "dart": "class Solution {\n  int winningPlayerCount(int n, List<List<int>> pick) {\n    \n  }\n}",
    "golang": "func winningPlayerCount(n int, pick [][]int) int {\n    \n}",
    "ruby": "# @param {Integer} n\n# @param {Integer[][]} pick\n# @return {Integer}\ndef winning_player_count(n, pick)\n    \nend",
    "scala": "object Solution {\n    def winningPlayerCount(n: Int, pick: Array[Array[Int]]): Int = {\n        \n    }\n}",
    "rust": "impl Solution {\n    pub fn winning_player_count(n: i32, pick: Vec<Vec<i32>>) -> i32 {\n        \n    }\n}",
    "racket": "(define/contract (winning-player-count n pick)\n  (-> exact-integer? (listof (listof exact-integer?)) exact-integer?)\n  )",
    "erlang": "-spec winning_player_count(N :: integer(), Pick :: [[integer()]]) -> integer().\nwinning_player_count(N, Pick) ->\n  .",
    "elixir": "defmodule Solution do\n  @spec winning_player_count(n :: integer, pick :: [[integer]]) :: integer\n  def winning_player_count(n, pick) do\n    \n  end\nend"
  }
}