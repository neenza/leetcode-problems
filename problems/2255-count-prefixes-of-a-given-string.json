{
  "title": "Count Prefixes of a Given String",
  "problem_id": "2341",
  "frontend_id": "2255",
  "difficulty": "Easy",
  "problem_slug": "count-prefixes-of-a-given-string",
  "topics": [
    "Array",
    "String"
  ],
  "description": "You are given a string array words and a string s, where words[i] and s comprise only of lowercase English letters.\nReturn the number of strings in words that are a prefix of s.\nA prefix of a string is a substring that occurs at the beginning of the string. A substring is a contiguous sequence of characters within a string.\nExample 1:\nExample 2:\nConstraints:",
  "examples": [
    {
      "example_num": 1,
      "example_text": "Input: words = [\"a\",\"b\",\"c\",\"ab\",\"bc\",\"abc\"], s = \"abc\"\nOutput: 3\nExplanation:\nThe strings in words which are a prefix of s = \"abc\" are:\n\"a\", \"ab\", and \"abc\".\nThus the number of strings in words which are a prefix of s is 3.",
      "images": []
    },
    {
      "example_num": 2,
      "example_text": "Input: words = [\"a\",\"a\"], s = \"aa\"\nOutput: 2\nExplanation:\nBoth of the strings are a prefix of s. \nNote that the same string can occur multiple times in words, and it should be counted each time.",
      "images": []
    }
  ],
  "constraints": [
    "1 <= words.length <= 1000",
    "1 <= words[i].length, s.length <= 10",
    "words[i] and s consist of lowercase English letters only."
  ],
  "follow_ups": [],
  "hints": [
    "For each string in words, check if it is a prefix of s. If true, increment the answer by 1."
  ],
  "code_snippets": {
    "cpp": "class Solution {\npublic:\n    int countPrefixes(vector<string>& words, string s) {\n        \n    }\n};",
    "java": "class Solution {\n    public int countPrefixes(String[] words, String s) {\n        \n    }\n}",
    "python": "class Solution(object):\n    def countPrefixes(self, words, s):\n        \"\"\"\n        :type words: List[str]\n        :type s: str\n        :rtype: int\n        \"\"\"\n        ",
    "python3": "class Solution:\n    def countPrefixes(self, words: List[str], s: str) -> int:\n        ",
    "c": "int countPrefixes(char** words, int wordsSize, char* s) {\n    \n}",
    "csharp": "public class Solution {\n    public int CountPrefixes(string[] words, string s) {\n        \n    }\n}",
    "javascript": "/**\n * @param {string[]} words\n * @param {string} s\n * @return {number}\n */\nvar countPrefixes = function(words, s) {\n    \n};",
    "typescript": "function countPrefixes(words: string[], s: string): number {\n    \n};",
    "php": "class Solution {\n\n    /**\n     * @param String[] $words\n     * @param String $s\n     * @return Integer\n     */\n    function countPrefixes($words, $s) {\n        \n    }\n}",
    "swift": "class Solution {\n    func countPrefixes(_ words: [String], _ s: String) -> Int {\n        \n    }\n}",
    "kotlin": "class Solution {\n    fun countPrefixes(words: Array<String>, s: String): Int {\n        \n    }\n}",
    "dart": "class Solution {\n  int countPrefixes(List<String> words, String s) {\n    \n  }\n}",
    "golang": "func countPrefixes(words []string, s string) int {\n    \n}",
    "ruby": "# @param {String[]} words\n# @param {String} s\n# @return {Integer}\ndef count_prefixes(words, s)\n    \nend",
    "scala": "object Solution {\n    def countPrefixes(words: Array[String], s: String): Int = {\n        \n    }\n}",
    "rust": "impl Solution {\n    pub fn count_prefixes(words: Vec<String>, s: String) -> i32 {\n        \n    }\n}",
    "racket": "(define/contract (count-prefixes words s)\n  (-> (listof string?) string? exact-integer?)\n  )",
    "erlang": "-spec count_prefixes(Words :: [unicode:unicode_binary()], S :: unicode:unicode_binary()) -> integer().\ncount_prefixes(Words, S) ->\n  .",
    "elixir": "defmodule Solution do\n  @spec count_prefixes(words :: [String.t], s :: String.t) :: integer\n  def count_prefixes(words, s) do\n    \n  end\nend"
  }
}