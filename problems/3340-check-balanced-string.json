{
  "title": "Check Balanced String",
  "problem_id": "3636",
  "frontend_id": "3340",
  "difficulty": "Easy",
  "problem_slug": "check-balanced-string",
  "topics": [
    "String"
  ],
  "description": "You are given a string num consisting of only digits. A string of digits is called balanced if the sum of the digits at even indices is equal to the sum of digits at odd indices.\nReturn true if num is balanced, otherwise return false.\nExample 1:\nExample 2:\nConstraints:",
  "examples": [
    {
      "example_num": 1,
      "example_text": "Input: num = \"1234\"\nOutput: false\nExplanation:",
      "images": []
    },
    {
      "example_num": 2,
      "example_text": "Input: num = \"24123\"\nOutput: true\nExplanation:",
      "images": []
    }
  ],
  "constraints": [
    "2 <= num.length <= 100",
    "num consists of digits only"
  ],
  "follow_ups": [],
  "hints": [],
  "code_snippets": {
    "cpp": "class Solution {\npublic:\n    bool isBalanced(string num) {\n        \n    }\n};",
    "java": "class Solution {\n    public boolean isBalanced(String num) {\n        \n    }\n}",
    "python": "class Solution(object):\n    def isBalanced(self, num):\n        \"\"\"\n        :type num: str\n        :rtype: bool\n        \"\"\"\n        ",
    "python3": "class Solution:\n    def isBalanced(self, num: str) -> bool:\n        ",
    "c": "bool isBalanced(char* num) {\n    \n}",
    "csharp": "public class Solution {\n    public bool IsBalanced(string num) {\n        \n    }\n}",
    "javascript": "/**\n * @param {string} num\n * @return {boolean}\n */\nvar isBalanced = function(num) {\n    \n};",
    "typescript": "function isBalanced(num: string): boolean {\n    \n};",
    "php": "class Solution {\n\n    /**\n     * @param String $num\n     * @return Boolean\n     */\n    function isBalanced($num) {\n        \n    }\n}",
    "swift": "class Solution {\n    func isBalanced(_ num: String) -> Bool {\n        \n    }\n}",
    "kotlin": "class Solution {\n    fun isBalanced(num: String): Boolean {\n        \n    }\n}",
    "dart": "class Solution {\n  bool isBalanced(String num) {\n    \n  }\n}",
    "golang": "func isBalanced(num string) bool {\n    \n}",
    "ruby": "# @param {String} num\n# @return {Boolean}\ndef is_balanced(num)\n    \nend",
    "scala": "object Solution {\n    def isBalanced(num: String): Boolean = {\n        \n    }\n}",
    "rust": "impl Solution {\n    pub fn is_balanced(num: String) -> bool {\n        \n    }\n}",
    "racket": "(define/contract (is-balanced num)\n  (-> string? boolean?)\n  )",
    "erlang": "-spec is_balanced(Num :: unicode:unicode_binary()) -> boolean().\nis_balanced(Num) ->\n  .",
    "elixir": "defmodule Solution do\n  @spec is_balanced(num :: String.t) :: boolean\n  def is_balanced(num) do\n    \n  end\nend"
  }
}