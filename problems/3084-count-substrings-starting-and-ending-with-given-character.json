{
  "title": "Count Substrings Starting and Ending with Given Character",
  "problem_id": "3337",
  "frontend_id": "3084",
  "difficulty": "Medium",
  "problem_slug": "count-substrings-starting-and-ending-with-given-character",
  "topics": [
    "Math",
    "String",
    "Counting"
  ],
  "description": "You are given a string s and a character c. Return the total number of substrings of s that start and end with c.\nExample 1:\nExample 2:\nConstraints:",
  "examples": [
    {
      "example_num": 1,
      "example_text": "Input: s = \"abada\", c = \"a\"\nOutput: 6\nExplanation: Substrings starting and ending with \"a\" are: \" a bada\" , \" aba da\" , \" abada \" , \"ab a da\" , \"ab ada \" , \"abad a \" .",
      "images": []
    },
    {
      "example_num": 2,
      "example_text": "Input: s = \"zzz\", c = \"z\"\nOutput: 6\nExplanation: There are a total of 6 substrings in s and all start and end with \"z\" .",
      "images": []
    }
  ],
  "constraints": [
    "1 <= s.length <= 105",
    "s and c consist only of lowercase English letters."
  ],
  "follow_ups": [],
  "hints": [
    "Count the number of characters <code>'c'</code> in string <code>s</code>, let’s call it <code>m</code>.",
    "We can select <code>2</code> numbers <code>i</code> and <code>j</code> such that <code>i <= j</code> are the start and end indices of substring. Note that <code>i</code> and <code>j</code> can be the same.",
    "The answer is <code>m * (m + 1) / 2</code>."
  ],
  "code_snippets": {
    "cpp": "class Solution {\npublic:\n    long long countSubstrings(string s, char c) {\n        \n    }\n};",
    "java": "class Solution {\n    public long countSubstrings(String s, char c) {\n        \n    }\n}",
    "python": "class Solution(object):\n    def countSubstrings(self, s, c):\n        \"\"\"\n        :type s: str\n        :type c: str\n        :rtype: int\n        \"\"\"\n        ",
    "python3": "class Solution:\n    def countSubstrings(self, s: str, c: str) -> int:\n        ",
    "c": "long long countSubstrings(char* s, char c) {\n    \n}",
    "csharp": "public class Solution {\n    public long CountSubstrings(string s, char c) {\n        \n    }\n}",
    "javascript": "/**\n * @param {string} s\n * @param {character} c\n * @return {number}\n */\nvar countSubstrings = function(s, c) {\n    \n};",
    "typescript": "function countSubstrings(s: string, c: string): number {\n    \n};",
    "php": "class Solution {\n\n    /**\n     * @param String $s\n     * @param String $c\n     * @return Integer\n     */\n    function countSubstrings($s, $c) {\n        \n    }\n}",
    "swift": "class Solution {\n    func countSubstrings(_ s: String, _ c: Character) -> Int {\n        \n    }\n}",
    "kotlin": "class Solution {\n    fun countSubstrings(s: String, c: Char): Long {\n        \n    }\n}",
    "dart": "class Solution {\n  int countSubstrings(String s, String c) {\n    \n  }\n}",
    "golang": "func countSubstrings(s string, c byte) int64 {\n    \n}",
    "ruby": "# @param {String} s\n# @param {Character} c\n# @return {Integer}\ndef count_substrings(s, c)\n    \nend",
    "scala": "object Solution {\n    def countSubstrings(s: String, c: Char): Long = {\n        \n    }\n}",
    "rust": "impl Solution {\n    pub fn count_substrings(s: String, c: char) -> i64 {\n        \n    }\n}",
    "racket": "(define/contract (count-substrings s c)\n  (-> string? char? exact-integer?)\n  )",
    "erlang": "-spec count_substrings(S :: unicode:unicode_binary(), C :: char()) -> integer().\ncount_substrings(S, C) ->\n  .",
    "elixir": "defmodule Solution do\n  @spec count_substrings(s :: String.t, c :: char) :: integer\n  def count_substrings(s, c) do\n    \n  end\nend"
  }
}