{
  "title": "Find the Difference",
  "problem_id": "389",
  "frontend_id": "389",
  "difficulty": "Easy",
  "problem_slug": "find-the-difference",
  "topics": [
    "Hash Table",
    "String",
    "Bit Manipulation",
    "Sorting"
  ],
  "description": "You are given two strings s and t.\nString t is generated by random shuffling string s and then add one more letter at a random position.\nReturn the letter that was added to t.\nExample 1:\nExample 2:\nConstraints:",
  "examples": [
    {
      "example_num": 1,
      "example_text": "Input: s = \"abcd\", t = \"abcde\"\nOutput: \"e\"\nExplanation: 'e' is the letter that was added.",
      "images": []
    },
    {
      "example_num": 2,
      "example_text": "Input: s = \"\", t = \"y\"\nOutput: \"y\"",
      "images": []
    }
  ],
  "constraints": [
    "0 <= s.length <= 1000",
    "t.length == s.length + 1",
    "s and t consist of lowercase English letters."
  ],
  "follow_ups": [],
  "hints": [],
  "code_snippets": {
    "cpp": "class Solution {\npublic:\n    char findTheDifference(string s, string t) {\n        \n    }\n};",
    "java": "class Solution {\n    public char findTheDifference(String s, String t) {\n        \n    }\n}",
    "python": "class Solution(object):\n    def findTheDifference(self, s, t):\n        \"\"\"\n        :type s: str\n        :type t: str\n        :rtype: str\n        \"\"\"\n        ",
    "python3": "class Solution:\n    def findTheDifference(self, s: str, t: str) -> str:\n        ",
    "c": "char findTheDifference(char* s, char* t) {\n    \n}",
    "csharp": "public class Solution {\n    public char FindTheDifference(string s, string t) {\n        \n    }\n}",
    "javascript": "/**\n * @param {string} s\n * @param {string} t\n * @return {character}\n */\nvar findTheDifference = function(s, t) {\n    \n};",
    "typescript": "function findTheDifference(s: string, t: string): string {\n    \n};",
    "php": "class Solution {\n\n    /**\n     * @param String $s\n     * @param String $t\n     * @return String\n     */\n    function findTheDifference($s, $t) {\n        \n    }\n}",
    "swift": "class Solution {\n    func findTheDifference(_ s: String, _ t: String) -> Character {\n        \n    }\n}",
    "kotlin": "class Solution {\n    fun findTheDifference(s: String, t: String): Char {\n        \n    }\n}",
    "dart": "class Solution {\n  String findTheDifference(String s, String t) {\n    \n  }\n}",
    "golang": "func findTheDifference(s string, t string) byte {\n    \n}",
    "ruby": "# @param {String} s\n# @param {String} t\n# @return {Character}\ndef find_the_difference(s, t)\n    \nend",
    "scala": "object Solution {\n    def findTheDifference(s: String, t: String): Char = {\n        \n    }\n}",
    "rust": "impl Solution {\n    pub fn find_the_difference(s: String, t: String) -> char {\n        \n    }\n}",
    "racket": "(define/contract (find-the-difference s t)\n  (-> string? string? char?)\n  )",
    "erlang": "-spec find_the_difference(S :: unicode:unicode_binary(), T :: unicode:unicode_binary()) -> char().\nfind_the_difference(S, T) ->\n  .",
    "elixir": "defmodule Solution do\n  @spec find_the_difference(s :: String.t, t :: String.t) :: char\n  def find_the_difference(s, t) do\n    \n  end\nend"
  }
}