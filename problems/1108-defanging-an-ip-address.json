{
  "title": "Defanging an IP Address",
  "problem_id": "1205",
  "frontend_id": "1108",
  "difficulty": "Easy",
  "problem_slug": "defanging-an-ip-address",
  "topics": [
    "String"
  ],
  "description": "Given a valid (IPv4) IP address, return a defanged version of that IP address.\nA defanged IP address replaces every period \".\" with \"[.]\".\nExample 1:\nExample 2:\nConstraints:",
  "examples": [
    {
      "example_num": 1,
      "example_text": "Input: address = \"1.1.1.1\"\r\nOutput: \"1[.]1[.]1[.]1\"",
      "images": []
    },
    {
      "example_num": 2,
      "example_text": "Input: address = \"255.100.50.0\"\r\nOutput: \"255[.]100[.]50[.]0\"",
      "images": []
    }
  ],
  "constraints": [
    "The given address is a valid IPv4 address."
  ],
  "follow_ups": [],
  "hints": [],
  "code_snippets": {
    "cpp": "class Solution {\npublic:\n    string defangIPaddr(string address) {\n        \n    }\n};",
    "java": "class Solution {\n    public String defangIPaddr(String address) {\n        \n    }\n}",
    "python": "class Solution(object):\n    def defangIPaddr(self, address):\n        \"\"\"\n        :type address: str\n        :rtype: str\n        \"\"\"\n        ",
    "python3": "class Solution:\n    def defangIPaddr(self, address: str) -> str:\n        ",
    "c": "\n\nchar * defangIPaddr(char * address){\n\n}",
    "csharp": "public class Solution {\n    public string DefangIPaddr(string address) {\n        \n    }\n}",
    "javascript": "/**\n * @param {string} address\n * @return {string}\n */\nvar defangIPaddr = function(address) {\n    \n};",
    "typescript": "function defangIPaddr(address: string): string {\n\n};",
    "php": "class Solution {\n\n    /**\n     * @param String $address\n     * @return String\n     */\n    function defangIPaddr($address) {\n        \n    }\n}",
    "swift": "class Solution {\n    func defangIPaddr(_ address: String) -> String {\n        \n    }\n}",
    "kotlin": "class Solution {\n    fun defangIPaddr(address: String): String {\n        \n    }\n}",
    "golang": "func defangIPaddr(address string) string {\n    \n}",
    "ruby": "# @param {String} address\n# @return {String}\ndef defang_i_paddr(address)\n    \nend",
    "scala": "object Solution {\n    def defangIPaddr(address: String): String = {\n        \n    }\n}",
    "rust": "impl Solution {\n    pub fn defang_i_paddr(address: String) -> String {\n        \n    }\n}"
  }
}