{
  "title": "Check If Word Is Valid After Substitutions",
  "problem_id": "1045",
  "frontend_id": "1003",
  "difficulty": "Medium",
  "problem_slug": "check-if-word-is-valid-after-substitutions",
  "topics": [
    "String",
    "Stack"
  ],
  "description": "Given a string s, determine if it is valid.\nA string s is valid if, starting with an empty string t = \"\", you can transform t into s after performing the following operation any number of times:\nReturn true if s is a valid string, otherwise, return false.\nExample 1:\nExample 2:\nExample 3:\nConstraints:",
  "examples": [
    {
      "example_num": 1,
      "example_text": "Input: s = \"aabcbc\"\nOutput: true\nExplanation:\n\"\" -> \"abc\" -> \"aabcbc\"\nThus, \"aabcbc\" is valid.",
      "images": []
    },
    {
      "example_num": 2,
      "example_text": "Input: s = \"abcabcababcc\"\nOutput: true\nExplanation:\n\"\" -> \"abc\" -> \"abcabc\" -> \"abcabcabc\" -> \"abcabcababcc\"\nThus, \"abcabcababcc\" is valid.",
      "images": []
    },
    {
      "example_num": 3,
      "example_text": "Input: s = \"abccba\"\nOutput: false\nExplanation: It is impossible to get \"abccba\" using the operation.",
      "images": []
    }
  ],
  "constraints": [
    "1 <= s.length <= 2 * 104",
    "s consists of letters 'a', 'b', and 'c'"
  ],
  "follow_ups": [],
  "hints": [],
  "code_snippets": {
    "cpp": "class Solution {\npublic:\n    bool isValid(string s) {\n        \n    }\n};",
    "java": "class Solution {\n    public boolean isValid(String s) {\n        \n    }\n}",
    "python": "class Solution(object):\n    def isValid(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: bool\n        \"\"\"\n        ",
    "python3": "class Solution:\n    def isValid(self, s: str) -> bool:\n        ",
    "c": "bool isValid(char* s) {\n    \n}",
    "csharp": "public class Solution {\n    public bool IsValid(string s) {\n        \n    }\n}",
    "javascript": "/**\n * @param {string} s\n * @return {boolean}\n */\nvar isValid = function(s) {\n    \n};",
    "typescript": "function isValid(s: string): boolean {\n    \n};",
    "php": "class Solution {\n\n    /**\n     * @param String $s\n     * @return Boolean\n     */\n    function isValid($s) {\n        \n    }\n}",
    "swift": "class Solution {\n    func isValid(_ s: String) -> Bool {\n        \n    }\n}",
    "kotlin": "class Solution {\n    fun isValid(s: String): Boolean {\n        \n    }\n}",
    "dart": "class Solution {\n  bool isValid(String s) {\n    \n  }\n}",
    "golang": "func isValid(s string) bool {\n    \n}",
    "ruby": "# @param {String} s\n# @return {Boolean}\ndef is_valid(s)\n    \nend",
    "scala": "object Solution {\n    def isValid(s: String): Boolean = {\n        \n    }\n}",
    "rust": "impl Solution {\n    pub fn is_valid(s: String) -> bool {\n        \n    }\n}",
    "racket": "(define/contract (is-valid s)\n  (-> string? boolean?)\n  )",
    "erlang": "-spec is_valid(S :: unicode:unicode_binary()) -> boolean().\nis_valid(S) ->\n  .",
    "elixir": "defmodule Solution do\n  @spec is_valid(s :: String.t) :: boolean\n  def is_valid(s) do\n    \n  end\nend"
  }
}