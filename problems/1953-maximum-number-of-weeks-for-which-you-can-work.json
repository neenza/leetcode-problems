{
  "title": "Maximum Number of Weeks for Which You Can Work",
  "problem_id": "2084",
  "frontend_id": "1953",
  "difficulty": "Medium",
  "problem_slug": "maximum-number-of-weeks-for-which-you-can-work",
  "topics": [
    "Array",
    "Greedy"
  ],
  "description": "There are n projects numbered from 0 to n - 1. You are given an integer array milestones where each milestones[i] denotes the number of milestones the ith project has.\nYou can work on the projects following these two rules:\nOnce all the milestones of all the projects are finished, or if the only milestones that you can work on will cause you to violate the above rules, you will stop working. Note that you may not be able to finish every project's milestones due to these constraints.\nReturn the maximum number of weeks you would be able to work on the projects without violating the rules mentioned above.\nExample 1:\nExample 2:\nConstraints:",
  "examples": [
    {
      "example_num": 1,
      "example_text": "Input: milestones = [1,2,3]\nOutput: 6\nExplanation: One possible scenario is:\n​​​​- During the 1st week, you will work on a milestone of project 0.\n- During the 2nd week, you will work on a milestone of project 2.\n- During the 3rd week, you will work on a milestone of project 1.\n- During the 4th week, you will work on a milestone of project 2.\n- During the 5th week, you will work on a milestone of project 1.\n- During the 6th week, you will work on a milestone of project 2.\nThe total number of weeks is 6.",
      "images": []
    },
    {
      "example_num": 2,
      "example_text": "Input: milestones = [5,2,1]\nOutput: 7\nExplanation: One possible scenario is:\n- During the 1st week, you will work on a milestone of project 0.\n- During the 2nd week, you will work on a milestone of project 1.\n- During the 3rd week, you will work on a milestone of project 0.\n- During the 4th week, you will work on a milestone of project 1.\n- During the 5th week, you will work on a milestone of project 0.\n- During the 6th week, you will work on a milestone of project 2.\n- During the 7th week, you will work on a milestone of project 0.\nThe total number of weeks is 7.\nNote that you cannot work on the last milestone of project 0 on 8th week because it would violate the rules.\nThus, one milestone in project 0 will remain unfinished.",
      "images": []
    }
  ],
  "constraints": [
    "n == milestones.length",
    "1 <= n <= 105",
    "1 <= milestones[i] <= 109"
  ],
  "follow_ups": [],
  "hints": [
    "Work on the project with the largest number of milestones as long as it is possible.",
    "Does the project with the largest number of milestones affect the number of weeks?"
  ],
  "code_snippets": {
    "cpp": "class Solution {\npublic:\n    long long numberOfWeeks(vector<int>& milestones) {\n        \n    }\n};",
    "java": "class Solution {\n    public long numberOfWeeks(int[] milestones) {\n        \n    }\n}",
    "python": "class Solution(object):\n    def numberOfWeeks(self, milestones):\n        \"\"\"\n        :type milestones: List[int]\n        :rtype: int\n        \"\"\"\n        ",
    "python3": "class Solution:\n    def numberOfWeeks(self, milestones: List[int]) -> int:\n        ",
    "c": "long long numberOfWeeks(int* milestones, int milestonesSize) {\n    \n}",
    "csharp": "public class Solution {\n    public long NumberOfWeeks(int[] milestones) {\n        \n    }\n}",
    "javascript": "/**\n * @param {number[]} milestones\n * @return {number}\n */\nvar numberOfWeeks = function(milestones) {\n    \n};",
    "typescript": "function numberOfWeeks(milestones: number[]): number {\n    \n};",
    "php": "class Solution {\n\n    /**\n     * @param Integer[] $milestones\n     * @return Integer\n     */\n    function numberOfWeeks($milestones) {\n        \n    }\n}",
    "swift": "class Solution {\n    func numberOfWeeks(_ milestones: [Int]) -> Int {\n        \n    }\n}",
    "kotlin": "class Solution {\n    fun numberOfWeeks(milestones: IntArray): Long {\n        \n    }\n}",
    "dart": "class Solution {\n  int numberOfWeeks(List<int> milestones) {\n    \n  }\n}",
    "golang": "func numberOfWeeks(milestones []int) int64 {\n    \n}",
    "ruby": "# @param {Integer[]} milestones\n# @return {Integer}\ndef number_of_weeks(milestones)\n    \nend",
    "scala": "object Solution {\n    def numberOfWeeks(milestones: Array[Int]): Long = {\n        \n    }\n}",
    "rust": "impl Solution {\n    pub fn number_of_weeks(milestones: Vec<i32>) -> i64 {\n        \n    }\n}",
    "racket": "(define/contract (number-of-weeks milestones)\n  (-> (listof exact-integer?) exact-integer?)\n  )",
    "erlang": "-spec number_of_weeks(Milestones :: [integer()]) -> integer().\nnumber_of_weeks(Milestones) ->\n  .",
    "elixir": "defmodule Solution do\n  @spec number_of_weeks(milestones :: [integer]) :: integer\n  def number_of_weeks(milestones) do\n    \n  end\nend"
  }
}